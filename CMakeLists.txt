CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(jakopter)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(SDL2)
FIND_PACKAGE(SDL2TTF)
FIND_PACKAGE(SDL2Image)
FIND_PACKAGE(FFmpeg)
FIND_PACKAGE(Lua)
FIND_PACKAGE(Leap)
FIND_PACKAGE(Curses)
FIND_PACKAGE(OpenCV)

# Debug: print all declared variables
#get_cmake_property(_variableNames VARIABLES)
#foreach (_variableName ${_variableNames})
#	message(STATUS "${_variableName}=${${_variableName}}")
#endforeach()

#Â SET (CMAKE_C_COMPILER "/usr/bin/clang")

INCLUDE_DIRECTORIES("include/")

SET(CMAKE_BUILD_TYPE DEBUG)

ADD_DEFINITIONS("-Wall") # Not compatible with MSVC

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY build/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY build/${CMAKE_BUILD_TYPE})

SET(
	CORE_SRC_FILES
	src/drone.c
	src/navdata.c
	src/com_channel.c
	src/com_master.c
	src/user_input.c
)

SET(
	VIDEO_SRC_FILES
	src/video.c
	src/video_queue.c
	src/video_decode.c
	src/video_display.c
)

SET(
	LEAP_SRC_FILES
	src/leap.cpp
)

SET(
	KEYB_SRC_FILES
	src/cmd.c
)

SET(
	LUA_SRC_FILES
	src/lua_bindings.c
)

SET(
	SRC_FILES
	${CORE_SRC_FILES}
)

IF(AVCODEC_FOUND AND SDL2_FOUND AND SDL2TTF_FOUND AND SDL2IMAGE_FOUND)
	MESSAGE(STATUS "Compiling with libavcodec and SDL2")
	INCLUDE_DIRECTORIES(${AVCODEC_INCLUDE_DIRS} ${SDL2_INCLUDE_DIR} ${SDL2TTF_INCLUDE_DIR} ${SDL2IMAGE_INCLUDE_DIR})
	SET(
		SRC_FILES
		${SRC_FILES}
		${VIDEO_SRC_FILES}
	)

	ADD_DEFINITIONS(${AVCODEC_DEFINITIONS})

	SET(WITH_VIDEO ON)
ELSE()
	MESSAGE(WARNING "Compiling WITHOUT libavcodec and SDL2")
	SET(WITH_VIDEO OFF)
ENDIF()

IF(LEAP_FOUND)
	MESSAGE(STATUS "Compiling with leap motion support")
	INCLUDE_DIRECTORIES(${LEAP_INCLUDE_DIRS})
ELSE()
	MESSAGE(WARNING "Compiling WITHOUT leap motion support")
ENDIF()

IF(CURSES_FOUND)
	MESSAGE(STATUS "Compiling keyboard command interface")
	INCLUDE_DIRECTORIES(${CURSES_INCLUDE_DIRS})
ELSE()
	MESSAGE(WARNING "Compiling WITHOUT keyboard command interface")
ENDIF()

IF(LUA_FOUND AND LUA_VERSION_MAJOR EQUAL 5 AND (LUA_VERSION_MINOR EQUAL 1 OR LUA_VERSION_MINOR EQUAL 2))
	MESSAGE(STATUS "Compiling with Lua")
	INCLUDE_DIRECTORIES(${LUA_INCLUDE_DIR})
	SET(
		SRC_FILES
		${SRC_FILES}
		${LUA_SRC_FILES}
	)
ELSE()
	MESSAGE(WARNING "Compiling WITHOUT Lua")
ENDIF()

CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/include/common.h.in ${CMAKE_SOURCE_DIR}/include/common.h)

ADD_LIBRARY(
	jakopter SHARED
	${SRC_FILES}
)

IF(LEAP_FOUND)
	ADD_EXECUTABLE(
		leap
		${LEAP_SRC_FILES}
	)
ENDIF()

IF(CURSES_FOUND)
	ADD_EXECUTABLE(
		keyb_control
		${KEYB_SRC_FILES}
	)
	TARGET_LINK_LIBRARIES(keyb_control ${CURSES_LIBRARIES})
ENDIF()


TARGET_LINK_LIBRARIES(jakopter ${CMAKE_THREAD_LIBS_INIT})

IF(LUA_FOUND)
	TARGET_LINK_LIBRARIES(jakopter ${LUA_LIBRARIES})
ENDIF()

IF(AVCODEC_FOUND AND SDL2_FOUND AND SDL2TTF_FOUND AND SDL2IMAGE_FOUND)
	TARGET_LINK_LIBRARIES(jakopter ${AVCODEC_LIBRARIES} ${AVUTIL_LIBRARIES} ${SDL2_LIBRARY} ${SDL2TTF_LIBRARY} ${SDL2IMAGE_LIBRARY})
ENDIF()

IF(LEAP_FOUND)
	TARGET_LINK_LIBRARIES(leap ${LEAP_LIBRARIES})
ENDIF()
